#根据题意可知分成两个集合的权值差要最小
#可以看成背包问题，背包大小为所有元素和的一半，最后看背包装了多少
ss = """5160 9191 6410 4657 7492 1531 8854 1253 4520 9231 1266 4801 3484 4323 5070 1789 2744 5959 9426 4433 4404 5291 2470 8533 7608 2935 8922 5273 8364 8819 7374 8077 5336 8495 5602 6553 3548 5267 9150 3309"""
nums = list(map(int, ss.split(" ")))
bag = sum(nums) // 2
n = 40
dp = [[0] * (bag + 1) for i in range(n + 1)]
for i in range(1, n + 1):
    cur = nums[i - 1]
    for j in range(1, bag + 1):
        if j - cur >= 0:
            dp[i][j] = max(dp[i - 1][j - cur] + cur, dp[i - 1][j])

a = max(dp[40])
b = sum(nums) - a
print(a * b)
